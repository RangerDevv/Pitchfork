---
import Layout from '../layouts/Layout.astro';
import {appwriteDatabases , Products ,ProductList , PitchList} from '../lib/appwrite';

import UpvoteBtn from '../components/upvoteBtn.svelte';
import PitchForkThumbnail1 from '../components/img/PitchForkThumbnail1.png';

import { Client,Storage,Query } from 'appwrite';

export const client = new Client();
export const storage = new Storage(client);

let userid = Astro.cookies.get('user').value;

client
.setEndpoint('https://cloud.appwrite.io/v1')
.setProject('646538bf8be3792191bd');
  
const entries = (await appwriteDatabases.listDocuments(
	'646538e35dd17306c589',
	'648785f8d079d1a1e1d0',
	[
		Query.orderAsc('LaunchDate'),
		Query.lessThanEqual('LaunchDate', new Date().toISOString().slice(0, 10)),
	]
)) as ProductList;

const pitches = (await appwriteDatabases.listDocuments(
	'646b9dd716753e384863',
	'646b9e0e29b66e4a8a22',
	[
		Query.orderAsc('LaunchDate'),
		Query.lessThanEqual('LaunchDate', new Date().toISOString().slice(0, 10)),
	]
)) as PitchList;

console.log(entries);

const today = new Date(); // Get the current date
const formattedToday = new Date(today.getTime() - today.getTimezoneOffset()*60000).toISOString().slice(0, 10)

console.log(formattedToday);

const todayPosts = entries.documents
  .filter((post) => {
	console.log(post.LaunchDate);
	const postDate = new Date(post.LaunchDate.slice(0,-6));
 console.log(postDate);
 console.log('-----');
    const formattedPostDate = postDate.toISOString().slice(0, 10); // Format the date as "YYYY-MM-DD"
    return formattedPostDate === formattedToday; // Filter posts with matching formatted date
  })
  .sort((a, b) => b.Upvotes.length - a.Upvotes.length);

const posts = entries.documents.sort(
  // sort the posts based on the number of upvotes
  (a, b) => b.Upvotes.length - a.Upvotes.length
).splice(0, 75);

const todayPitch = pitches.documents
  .filter((pitches) => {
	console.log(pitches.LaunchDate);
	const postDate = new Date(pitches.LaunchDate.slice(0,-6));
 console.log('PitchDate: '+postDate);
 console.log('-----');
	const formattedPostDate = postDate.toISOString().slice(0, 10); // Format the date as "YYYY-MM-DD"
	return formattedPostDate === formattedToday; // Filter posts with matching formatted date
  })
  .sort((a, b) => b.Upvotes.length - a.Upvotes.length);

const allPitches = pitches.documents.sort(
  // sort the posts based on the number of upvotes
  (a, b) => b.Upvotes.length - a.Upvotes.length  
).slice(0, 75);

function shufflePosts() {
  // Shuffle the posts array using the Fisher-Yates algorithm
  for (let i = todayPosts.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [todayPosts[i], todayPosts[j]] = [todayPosts[j], todayPosts[i]];
  }
  for (let i = todayPitch.length - 1; i > 0; i--) {
	const j = Math.floor(Math.random() * (i + 1));
	[todayPitch[i], todayPitch[j]] = [todayPitch[j], todayPitch[i]];
  }
}

// Initial shuffle
shufflePosts();

// Shuffle the posts every 2 hours
setInterval(() => {
  shufflePosts();
}, 2 * 60 * 60 * 1000); // 2 hours in milliseconds

let user = Astro.cookies.get('user').value;
let userName = Astro.cookies.get('userName').value;
---

<Layout title="Pitchfork">
		<!--  create a popup that shows up that introduces the site -->
		{!user && <div class="fixed z-10 inset-0 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true" id="modal">
			<div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
				<div class="fixed inset-0 bg-slate-900 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
				<span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
				<div class="inline-block align-bottom bg-slate-900 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
					<div class="bg-purple-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
						<img src={PitchForkThumbnail1} class="mx-auto w-auto" />
						<p class="text-center text-2xl font-bold text-white pt-6">Welcome to Pitchfork!</p>
						<p class="text-center text-white text-lg pt-2">Amplify Ideas, Empower Creators</p>
						<p class="text-center text-white mt-3 overflow-y-scroll">PitchFork is a platform designed for sharing product ideas and receiving real-time feedback. Additionally, PitchFork offers creators the opportunity to showcase their projects. The platform boasts a clean and user-friendly UI/UX.</p>
					</div>
					<div class="bg-purple-800 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
						<a href="/login" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-slate-800 text-base font-medium text-white hover:bg-slate-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-slate-500 sm:ml-3 sm:w-auto sm:text-sm">
							Sign in
						</a>
						<a href="/signup" class="mt-3 w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-slate-800 text-base font-medium text-white hover:bg-slate-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-s
	late-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
							Sign up
						</a>
						<button type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-slate-800 text-base font-medium text-white hover:bg-slate-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-slate-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm" onclick="document.getElementById('modal').remove();">
							Cancel
						</button>
						<a href="https://appwritepitchfork.hashnode.dev/pitchfork" class="mt-3 w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-slate-800 text-base font-medium text-white hover:bg-slate-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-slate-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
							Read our blog post
						</a>
					</div>
				</div>
			</div>
		</div>}
	<main class="p-5 sm:p-10">
		<!--  sort the posts based on if it was posted today or not -->
		<h1 class="text-white text-center mb-5 text-2xl font-normal">New Products</h1>
		<div class="flex flex-wrap items-center flex-row gap-5 justify-center m-auto">
			{todayPosts.map((todayPosts)=> (
			<div class="flex flex-col gap-3 bg-slate-800 rounded-xl w-80 p-3">
				<a class="" href={'/post/'+todayPosts.$id}>
				<div class="flex flex-col gap-3">
					<img src={'https://cloud.appwrite.io/v1/storage/buckets/64661e622715cf602c83/files/'+todayPosts.Thumbnail+'/preview?project=646538bf8be3792191bd'} alt="image" class="w-auto h-48" />
					<div class="flex">
					<img src={'https://cloud.appwrite.io/v1/storage/buckets/646547f5019189c8092b/files/'+todayPosts.Icon+'/preview?project=646538bf8be3792191bd'} alt="image" class="w-auto h-24" />
					<div class="pl-2">
						<p class="text-lg">{todayPosts.Name}</p>
						<p class="text-md">{todayPosts.Tagline}</p>
						<p class=" text-sm text-gray-300">#{todayPosts.Tag}</p>
						{todayPosts.Free && <p class=" text-sm text-gray-400">Free</p> || <p class=" text-sm text-gray-400">Paid/Has Paid Options</p>}
						<p class="text-xs text-gray-400">By: {todayPosts.Author}</p>
					</div>
					</div>
				</div>
				</a>
				<UpvoteBtn client:only="svelte" DatabaseID="646538e35dd17306c589" CollectionID="648785f8d079d1a1e1d0" DocumentID={todayPosts.$id} uid={userid} />
			</div>
			))}
			<!--  if the TodayPost array is empty, display a message -->
			{todayPosts.length === 0 && (
				<div class="flex flex-col gap-3 bg-slate-800 rounded-xl w-80 p-3">
					<p class="text-white text-center">No posts today ðŸ˜­ create your own <a href="/post/create" class="text-blue-500">here</a></p>
				</div>
			)}
		</div>
		<h1 class="text-white text-center mb-5 text-2xl font-normal pt-5">New Pitches</h1>
		<div class="flex flex-wrap items-center flex-row gap-5 justify-center m-auto">
		{todayPitch.map((todayPitch)=> (
			<div class="flex flex-col gap-3 bg-slate-800 rounded-xl w-80 p-3">
			<a class="" href={'/pitch/'+todayPitch.$id}>
			<div class="flex flex-col gap-3">
			<img src={'https://cloud.appwrite.io/v1/storage/buckets/64661e622715cf602c83/files/'+todayPitch.Thumbnail+'/preview?project=646538bf8be3792191bd'} alt="image" class="w-auto h-48" />
			<div class="flex">
			<img src={'https://cloud.appwrite.io/v1/storage/buckets/646547f5019189c8092b/files/'+todayPitch.Icon+'/preview?project=646538bf8be3792191bd'} alt="image" class="w-auto h-24" />
			<div class="pl-2">
				<p class="text-lg">{todayPitch.Title}</p>
				<p class="text-md">{todayPitch.Tagline}</p>
				<p class=" text-sm text-gray-300">#{todayPitch.Tag}</p>
				{todayPitch.Free && <p class=" text-sm text-gray-400">Free</p> || <p class=" text-sm text-gray-400">Paid/Has Paid Options</p>}
				<p class="text-xs text-gray-400">By: {todayPitch.Author}</p>
			</div>
			</div>
			</div>
			</a>
			<UpvoteBtn client:only="svelte" DatabaseID="646b9dd716753e384863" CollectionID="646b9e0e29b66e4a8a22" DocumentID={todayPitch.$id} uid={userid} />
			</div>
			))}
			<!--  if the TodayPost array is empty, display a message -->
			{todayPitch.length === 0 && (
			<div class="flex flex-col gap-3 bg-slate-800 rounded-xl w-80 p-3">
			<p class="text-white text-center">No posts today ðŸ˜­ create your own <a href="/pitch/create" class="text-blue-500">here</a></p>
			</div>
			)}
		</div>
		<h1 class="text-white text-center mb-5 text-2xl font-normal pt-5">Top Pitches
			<span>
				<div class="tooltip tooltip-primary" data-tip="View All Pitches">
					<a href="/pitch/pitch" class="text-blue-500">â†’</a>
				  </div>
			</span>
		</h1>
		<div class="flex flex-wrap items-center flex-row gap-5 justify-center m-auto">
			{allPitches.map((allPitches)=> (
			<div class="flex flex-col gap-3 bg-slate-800 rounded-xl w-80 p-3">
			<a class="" href={'/pitch/'+allPitches.$id}>
			<div class="flex flex-col gap-3">
			<img src={'https://cloud.appwrite.io/v1/storage/buckets/64661e622715cf602c83/files/'+allPitches.Thumbnail+'/preview?project=646538bf8be3792191bd'} alt="image" class="w-auto h-48" />
			<div class="flex">
			<img src={'https://cloud.appwrite.io/v1/storage/buckets/646547f5019189c8092b/files/'+allPitches.Icon+'/preview?project=646538bf8be3792191bd'} alt="image" class="w-auto h-24" />
			<div class="pl-2">
				<p class="text-lg">{allPitches.Title}</p>
				<p class="text-md">{allPitches.Tagline}</p>
				<p class=" text-sm text-gray-300">#{allPitches.Tag}</p>
				{allPitches.Free && <p class=" text-sm text-gray-400">Free</p> || <p class=" text-sm text-gray-400">Paid/Has Paid Options</p>}
				<p class="text-xs text-gray-400">By: {allPitches.Author}</p>
			</div>
			</div>
			</div>
			</a>
			<UpvoteBtn client:only="svelte" DatabaseID="646b9dd716753e384863" CollectionID="646b9e0e29b66e4a8a22" DocumentID={allPitches.$id} uid={userid} />
			</div>
			))}
		</div>
		<h1 class="text-white text-center mb-5 text-2xl font-normal pt-5">Top Products
			<span>
				<div class="tooltip tooltip-primary" data-tip="View All Products">
					<a href="/post/post" class="text-blue-500">â†’</a>
				  </div>
			</span>
		</h1>
		<div class="flex flex-wrap items-center flex-row gap-5 justify-center m-auto">
			{posts.map((posts)=> (
			<div class="flex flex-col gap-3 bg-slate-800 rounded-xl w-80 p-3">
				<a class="" href={'/post/'+posts.$id}>
				<div class="flex flex-col gap-3">
					<img src={'https://cloud.appwrite.io/v1/storage/buckets/64661e622715cf602c83/files/'+posts.Thumbnail+'/preview?project=646538bf8be3792191bd'} alt="image" class="w-auto h-48" />
					<div class="flex">
					<img src={'https://cloud.appwrite.io/v1/storage/buckets/646547f5019189c8092b/files/'+posts.Icon+'/preview?project=646538bf8be3792191bd'} alt="image" class="w-auto h-24" />
					<div class="pl-2">
						<p class="text-lg">{posts.Name}</p>
						<p class="text-md">{posts.Tagline}</p>
						<p class=" text-sm text-gray-300">#{posts.Tag}</p>
						{posts.Free && <p class=" text-sm text-gray-400">Free</p> || <p class=" text-sm text-gray-400">Paid/Has Paid Options</p>}
						<p class="text-xs text-gray-400">By: {posts.Author}</p>
					</div>
					</div>
				</div>
				</a>
				<UpvoteBtn client:only="svelte" DatabaseID="646538e35dd17306c589" CollectionID="648785f8d079d1a1e1d0" DocumentID={posts.$id} uid={userid} />
				</div>
			))}
		</div>
	</main>
</Layout>

<style>
	main {
		margin: auto;
	}

	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}

	/*  style the dialog box */
	#modal {
		z-index: 9999;
	}
</style>
