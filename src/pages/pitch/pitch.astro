---
import Layout from '../../layouts/Layout.astro';

import { update_await_block_branch } from 'svelte/internal';
import {appwriteDatabases , Products,ProductList , appwriteStorage, appwriteUser , PitchList} from '../../lib/appwrite';

import UpvoteBtn from '../../components/upvoteBtn.svelte';

import { Client,Storage,Query } from 'appwrite';

export const client = new Client();
export const storage = new Storage(client);

let userid = Astro.cookies.get('user').value;

client
.setEndpoint('https://cloud.appwrite.io/v1')
.setProject('646538bf8be3792191bd');


const pitches = (await appwriteDatabases.listDocuments(
	'646b9dd716753e384863',
	'646b9e0e29b66e4a8a22',
	[
		Query.orderAsc('LaunchDate'),
		Query.lessThanEqual('LaunchDate', new Date().toISOString().slice(0, 10)),
	]
)) as PitchList;
const allPitches = pitches.documents.sort(
  // sort the posts based on the number of upvotes
  (a, b) => b.Upvotes.length - a.Upvotes.length  
).slice(0, 75);
---
<Layout title="Pitchfork">
	<main class="p-5 sm:p-10">
		<h1 class="text-white text-center mb-5 text-2xl font-normal pt-5">All Pitches</h1>
		<div class="flex flex-wrap items-center flex-row gap-5 justify-center m-auto">
			{allPitches.map((allPitches)=> (
			<div class="flex flex-col gap-3 bg-slate-800 rounded-xl w-80 p-3">
			<a class="" href={'/pitch/'+allPitches.$id}>
			<div class="flex flex-col gap-3">
			<img src={'https://cloud.appwrite.io/v1/storage/buckets/64661e622715cf602c83/files/'+allPitches.Thumbnail+'/preview?project=646538bf8be3792191bd'} alt="image" class="w-auto h-48" />
			<div class="flex">
			<img src={'https://cloud.appwrite.io/v1/storage/buckets/646547f5019189c8092b/files/'+allPitches.Icon+'/preview?project=646538bf8be3792191bd'} alt="image" class="w-auto h-24" />
			<div class="pl-2">
				<p class="text-lg">{allPitches.Title}</p>
				<p class="text-md">{allPitches.Tagline}</p>
                <p class="text-sm text-gray-300">#{allPitches.Tag}</p>
				{allPitches.Free && <p class=" text-sm text-gray-400">Free</p> || <p class=" text-sm text-gray-400">Paid/Has Paid Options</p>}
				<p class="text-xs text-gray-400">By: {allPitches.Author}</p>
			</div>
			</div>
			</div>
			</a>
			<UpvoteBtn client:only="svelte" DatabaseID="646b9dd716753e384863" CollectionID="646b9e0e29b66e4a8a22" DocumentID={allPitches.$id} uid={userid} />
			</div>
			))}
		</div>
	</main>
</Layout>

<style>
	main {
		margin: auto;
	}

	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
