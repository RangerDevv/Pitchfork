---
import Layout from '../layouts/Layout.astro';
import Card from '../components/card.svelte';

import { Client, Account, ID, Databases, Permission, Role, Teams } from 'appwrite';

export const client = new Client();
export const account = new Account(client);
export const database = new Databases(client);
export const permission = new Permission();
export const team = new Teams(client);


client
.setEndpoint('https://cloud.appwrite.io/v1')
.setProject('646538bf8be3792191bd');

  let Products = [] as any;

  const databases = new Databases(client);

  // Fetch the documents and update the Products array
  async function fetchProducts() {
	try {
	  const response = await databases.listDocuments('646538e35dd17306c589', '646538eeeface7a4cd39');
	  if (response && response.documents && Array.isArray(response.documents)) {
		Products = response.documents;
		console.log(Products[0]?.Name);
	  }
	} catch (error) {
	  console.log(error);
	}
  }

  // Fetch the products on load
  fetchProducts();

---
<Layout title="Pitchfork">
	<main>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
