---
export interface Props {
	title: string;
}

import Signout from '../components/signout.svelte';
import SearchBar from '../components/searchBar.svelte';
import Thumbnail from '../components/imgThumbnail.png';


const { title } = Astro.props;

import { appwriteUser , appwriteClient } from '../lib/appwrite';

// get the user from the cookie
const user = Astro.cookies.get('user').value;
const currSession = Astro.cookies.get('session').value;

let loggedIn  = false;
let name = '';

if (user) {
	loggedIn = true;
	const userName = Astro.cookies.get('userName').value as string;
	name = userName;
} else {
	loggedIn = false;
}
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<!--  optimize the SEO of the website -->
		<meta name="description" content="A website to share your ideas and get feedback from the community" />
		<meta name="keywords" content="ideas, feedback, community, product, app, website" />
		<meta name="author" content="RangerDevv" />
		<meta name="robots" content="index, follow" />
		<meta name="theme-color" content="#861df7" />
		<!--  the image that will be shown when the website is shared -->
		<meta property="og:image" content={Thumbnail} />
	</head>
	<body class="text-white">
			<nav class="z-50">
			<a href="/" class="w-auto h-auto scale-[1.4] rounded-3xl pt-1">
				<svg width="30" height="30" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
					<circle cx="50" cy="50" r="45" fill="#8E00A5"/>
					<path d="M42.5 51.5L47 21L54 51.5L58.5 66.5L72.5 37L75.5 79H25.5L24 37L41 66.5L42.5 51.5Z" fill="#D9D9D9"/>
					</svg>					
			</a>
			<div class="flex flex-col" id="create">
				<a class="bg-purple-900 p-2 rounded-md hover:bg-purple-900" id="DropDownBtn">Posts</a>
				<!--  a dropdown menu for the create button -->
				<div class="flex flex-col gap-2" id="createDropdown">
					<a href="/post/post" class="p-2 rounded-md">ðŸ”¥ All Products</a>
					<a href="/pitch/pitch" class="p-2 rounded-md">ðŸš€ All Pitches</a>
				</div>
			</div>
			<div class="flex items-center">
			<SearchBar client:only="svelte" />
			</div>
			<div class="flex flex-row gap-5">
				<div class="flex flex-col" id="create">
				{loggedIn && <a class="bg-purple-900 p-2 rounded-md" id="DropDownBtn">Create</a>}
				<!--  a dropdown menu for the create button -->
				<div class="flex flex-col gap-2" id="createDropdown">
					{loggedIn && <a href="/post/create" class="p-2 rounded-md">ðŸŽ‰ Create Product</a>}
					{loggedIn && <a href="/pitch/create" class="p-2 rounded-md">ðŸ”§ Create Pitch</a>}
				</div>
				</div>
				{loggedIn && <p class="p-2 rounded-md">{name}</p>}
				{loggedIn && <Signout client:only="svelte" />}
				{!loggedIn && <a href="/login" class="p-2 rounded-md">Login</a>}
			</div>
			</nav>
		<slot />
	</body>
</html>
<style is:global>
	:root {
		--accent: 124, 58, 237;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
		background-color: rgb(22, 22, 22) !important;
		color: white;
		scroll-behavior: smooth;
	}
	html {
		font-family: system-ui, sans-serif;
		background-color: #F6F6F6;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}

	nav {
		display: flex;
		justify-content: space-between;
		padding: 0.5rem;
		background-color: rgb(var(--accent));
		position: sticky;
		top: 0;
	}
	nav a {
		color: white;
		text-decoration: none;
	}
	nav a:hover {
		text-decoration: underline;
	}
	nav a:active {
		text-decoration: underline;
	}

	/*  when the create button is hovered, the dropdown menu is shown */
	#DropDownBtn:hover + #createDropdown, #createDropdown:hover {
		display: flex;
	}
	#createDropdown {
		display: none;
		flex-direction: column;
		position: fixed;
		top: 3rem;
		background-color: #861df7;
		padding: 0.5rem;
		border-radius: 0.5rem;
		animation: fadeIn 0.3s;
	}

	@keyframes fadeIn {
		from {
			opacity: 0;
		}
		to {
			opacity: 1;
		}
	}

	#createDropdown a {
		color: white;
		text-decoration: none;
	}
	#createDropdown a:hover {
		text-decoration: underline;
	}
	#createDropdown a:active {
		text-decoration: underline;
	}
	/* width */
	::-webkit-scrollbar {
	width: 10px;
	border-radius: 2rem;
	}

	/* Track */
	::-webkit-scrollbar-track {
	background: transparent;
	}
	
	/* Handle */
	::-webkit-scrollbar-thumb {
	background: #888; 
	border-radius: 2rem;
	}

	/* Handle on hover */
	::-webkit-scrollbar-thumb:hover {
	background: #555; 
	}
</style>
